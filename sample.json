{
    "table_bee909c9bf5c4a85b228f771509ea545": [
        [
            "Lab Code",
            ":CPC-AP-113"
        ],
        [
            "Sample Drawn Date",
            ":2022-04-26 09:22"
        ],
        [
            "Registration Date",
            "2022-04-26 09:23"
        ],
        [
            "Approved Date",
            ":2022-04-26 09:56"
        ]
    ],
    "table_e0d38acbd1df4a1a83a2776472eb7691": [
        [
            "Sample ID",
            ":1524952 NaF Fasting"
        ],
        [
            "Patient ID",
            ":641523"
        ],
        [
            "Ref. Doctor :",
            " "
        ],
        [
            "Ref. Customer :",
            " "
        ]
    ],
    "table_8b2ad4dc52494618bca4ed76a35bedfa": [
        [
            "CLINICAL",
            "BIOCHEMISTRY",
            " ",
            " "
        ],
        [
            "Test Description",
            "Result",
            "Units",
            "Biological Reference Ranges"
        ],
        [
            "Glucose-Fasting (FBS) (Method Spectrophotometry)",
            "198",
            "mg/dL",
            "70 100 Normal 100 126 Pre Diabetic > 126 Diabetic"
        ]
    ]
}


<html>
  <head>
    <title>JSON to Table</title>
  </head>
  <body>
    {% for key, table in data.items() %}
      <h2>{{ key }}</h2>
      <table border="1">
        {% for row in table %}
          <tr>
            {% for item in row %}
              <td>{{ item }}</td>
            {% endfor %}
          </tr>
        {% endfor %}
      </table>
    {% endfor %}
  </body>
</html>

import json
from flask import Flask, jsonify, render_template

app = Flask(__name__)

data = {
    "table_bee909c9bf5c4a85b228f771509ea545": [
        [
            "Lab Code",
            ":CPC-AP-113"
        ],
        [
            "Sample Drawn Date",
            ":2022-04-26 09:22"
        ],
        [
            "Registration Date",
            "2022-04-26 09:23"
        ],
        [
            "Approved Date",
            ":2022-04-26 09:56"
        ]
    ],
    "table_e0d38acbd1df4a1a83a2776472eb7691": [
        [
            "Sample ID",
            ":1524952 NaF Fasting"
        ],
        [
            "Patient ID",
            ":641523"
        ],
        [
            "Ref. Doctor :",
            " "
        ],
        [
            "Ref. Customer :",
            " "
        ]
    ],
    "table_8b2ad4dc52494618bca4ed76a35bedfa": [
        [
            "CLINICAL",
            "BIOCHEMISTRY",
            " ",
            " "
        ],
        [
            "Test Description",
            "Result",
            "Units",
            "Biological Reference Ranges"
        ],
        [
            "Glucose-Fasting (FBS) (Method Spectrophotometry)",
            "198",
            "mg/dL",
            "70 100 Normal 100 126 Pre Diabetic > 126 Diabetic"
        ]
    ]
}


response = json.dumps(data)

print(response)

@app.route("/")
def index():
    return render_template("demo.html", data=response)

def lambda_handler(event, context):
    return {
        'statusCode': 200,
        'body': json.dumps(response),
        "headers": {
            "Content-Type": "text/html",
            "Content-Security-Policy": "default-src 'self'"
        }
    }

if __name__ == "__main__":
    app.run(debug=True)

